// <auto-generated />
using System;
using EntityLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220929121219_sliderresim")]
    partial class sliderresim
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EntityLayer.Concrete.AltBilgi", b =>
                {
                    b.Property<int>("AltBilgiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AltBilgiUrl")
                        .HasColumnType("text");

                    b.Property<string>("AltBilgiUrlBasligi")
                        .HasColumnType("text");

                    b.Property<string>("Baslik2")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("AltBilgiId");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("altBilgis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim1", b =>
                {
                    b.Property<int>("AnaSayfaKisim1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnaSayfaBuyukBaslik1")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaDescription1")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaKucukBaslik1")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("ResimYol")
                        .HasColumnType("text");

                    b.HasKey("AnaSayfaKisim1Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("anaSayfaKisim1s");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim2", b =>
                {
                    b.Property<int>("AnaSayfaKisim2Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnaSayfaAltBaslik2")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaAltDescription2")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaAltUrl2")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaBaslik2")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaDescription2_1")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaDescription2_2")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("AnaSayfaKisim2Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("anaSayfaKisim2s");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim3", b =>
                {
                    b.Property<int>("AnaSayfaKisim3Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnaSayfaBaslik3")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaDescription3_1")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaKucukBaslik3_1")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaKucukBaslik3_1_1")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("AnaSayfaKisim3Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("anaSayfaKisim3s");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim4", b =>
                {
                    b.Property<int>("AnaSayfaKisim4Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnaSayfaBaslik4")
                        .HasColumnType("text");

                    b.Property<string>("AnaSayfaResim4Yol")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("AnaSayfaKisim4Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("anaSayfaKisim4s");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnasayfaAltMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AltMenuIsim")
                        .HasColumnType("text");

                    b.Property<string>("AltMenuUrl")
                        .HasColumnType("text");

                    b.Property<int>("AnasayfaMenuId")
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnasayfaMenuId");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("anasayfaAltMenus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnasayfaMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("MenuIsim")
                        .HasColumnType("text");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("anasayfaMenus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("RolType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("namesurname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Arge", b =>
                {
                    b.Property<int>("Arge_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Arge_Baslik")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Biz_kimiz")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Icerik")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Misyonumuz")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Tarihcemiz_Baslik")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Tarihcemiz_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Tarihcemiz_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Arge_vizyonumuz")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("Arge_Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("arges");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BakimYonetimi", b =>
                {
                    b.Property<int>("BakimYonetimi_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BakimYonetimi_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("BakimYonetimi_icerik")
                        .HasColumnType("text");

                    b.Property<string>("BakimYonetimi_isim")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("BakimYonetimi_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("bakimYonetimis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BarkodTakipStok", b =>
                {
                    b.Property<int>("BarkodTakipStok_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BarkodTakipStok_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("BarkodTakipStok_icerik")
                        .HasColumnType("text");

                    b.Property<string>("BarkodTakipStok_isim")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("BarkodTakipStok_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("barkodTakipStoks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Belgeler", b =>
                {
                    b.Property<int>("Belge_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Belge_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("Belge_isim")
                        .HasColumnType("text");

                    b.HasKey("Belge_Id");

                    b.ToTable("belgelers");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Blog", b =>
                {
                    b.Property<int>("Blog_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BlogKategoriID")
                        .HasColumnType("int");

                    b.Property<string>("Blog_baslik")
                        .HasColumnType("text");

                    b.Property<string>("Blog_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Blog_resim_yol")
                        .HasColumnType("text");

                    b.Property<bool>("Blog_status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("Blog_id");

                    b.HasIndex("BlogKategoriID");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("blogs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BlogKategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BlogKategoriAciklamasi")
                        .HasColumnType("text");

                    b.Property<string>("BlogKategoriAdi")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("KategoriResimYol")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("blogKategoris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekIletisim", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DestekPortaliIletisimKategoriId")
                        .HasColumnType("int");

                    b.Property<string>("isim")
                        .HasColumnType("text");

                    b.Property<string>("konu")
                        .HasColumnType("text");

                    b.Property<string>("mail")
                        .HasColumnType("text");

                    b.Property<string>("mesaj")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("DestekPortaliIletisimKategoriId");

                    b.ToTable("destekIletisims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekPortali", b =>
                {
                    b.Property<int>("DestekPortali_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DestekPortali_Baslik")
                        .HasColumnType("text");

                    b.Property<string>("DestekPortali_cevap")
                        .HasColumnType("text");

                    b.Property<string>("DestekPortali_icerik")
                        .HasColumnType("text");

                    b.Property<string>("DestekPortali_soru")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.HasKey("DestekPortali_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("destekPortalis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekPortaliIletisimKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("Kategori_adi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("destekPortaliIletisimKategoris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DilTablosu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DilAdi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("dilTablosus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EgitimVideolari", b =>
                {
                    b.Property<int>("EgitimVideo_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("EgitimVideo_Baslik")
                        .HasColumnType("text");

                    b.Property<string>("EgitimVideo_Yol")
                        .HasColumnType("text");

                    b.Property<string>("VideoAciklama")
                        .HasColumnType("text");

                    b.Property<int>("VideoKategoriID")
                        .HasColumnType("int");

                    b.HasKey("EgitimVideo_Id");

                    b.HasIndex("DilTablosuId");

                    b.HasIndex("VideoKategoriID");

                    b.ToTable("egitimVideolaris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EndustriAkilliFabrika", b =>
                {
                    b.Property<int>("EndustriAkilliFabrika_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("EndustriAkilliFabrika_icerik")
                        .HasColumnType("text");

                    b.Property<string>("EndustriAkilliFabrika_isim")
                        .HasColumnType("text");

                    b.Property<string>("EndustriAkilliFabrika_resim_yol")
                        .HasColumnType("text");

                    b.HasKey("EndustriAkilliFabrika_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("endustriAkilliFabrikas");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EnerjiYonetimi", b =>
                {
                    b.Property<int>("EnerjiYonetimi_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("EnerjiYonetimi_ResimYol")
                        .HasColumnType("text");

                    b.Property<string>("EnerjiYonetimi_icerik")
                        .HasColumnType("text");

                    b.Property<string>("EnerjiYonetimi_isim")
                        .HasColumnType("text");

                    b.HasKey("EnerjiYonetimi_Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("enerjiYonetimis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EntegreSistem", b =>
                {
                    b.Property<int>("EntegreSistem_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("EntegreSistem_icerik")
                        .HasColumnType("text");

                    b.Property<string>("EntegreSistem_isim")
                        .HasColumnType("text");

                    b.Property<string>("EntegreSistem_resim_yol")
                        .HasColumnType("text");

                    b.HasKey("EntegreSistem_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("entegreSistems");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Haber", b =>
                {
                    b.Property<int>("Haber_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("Haber_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Haber_isim")
                        .HasColumnType("text");

                    b.Property<string>("Haber_resim_yol")
                        .HasColumnType("text");

                    b.HasKey("Haber_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("habers");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Hakkimizda", b =>
                {
                    b.Property<int>("Hkkimizda_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Biz_kimiz_resim_yol")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("Hakkimizda_Baslik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Biz_Kimiz_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Bizkimiz_baslik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Ekibimiz_Baslik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Ekibimiz_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Ekibimiz_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Misyonumuz_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Neden_Biz_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_Vizyon_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_alt_baslik_bir")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_altbaslik_orta")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_altbaslik_sag")
                        .HasColumnType("text");

                    b.Property<string>("Hakkimizda_icerik")
                        .HasColumnType("text");

                    b.HasKey("Hkkimizda_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("hakkimizdas");
                });

            modelBuilder.Entity("EntityLayer.Concrete.HakkimizdaGuncelBilgiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IsArayanSayisi")
                        .HasColumnType("text");

                    b.Property<string>("IsIlaniSayisi")
                        .HasColumnType("text");

                    b.Property<string>("IsVerenSayisi")
                        .HasColumnType("text");

                    b.Property<string>("UyeSayisi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("hakkimizdaGuncelBilgilers");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Iletisim", b =>
                {
                    b.Property<int>("Iletisim_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Arge_Iletisim_Adres")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Iletisim_Email")
                        .HasColumnType("text");

                    b.Property<string>("Arge_Iletisim_Telefon")
                        .HasColumnType("text");

                    b.Property<string>("Iletisim_Adresimiz")
                        .HasColumnType("text");

                    b.Property<string>("Iletisim_Email_Adresimiz")
                        .HasColumnType("text");

                    b.Property<string>("Iletisim_Telefon_numaramiz")
                        .HasColumnType("text");

                    b.HasKey("Iletisim_id");

                    b.ToTable("Iletisims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.IsBasvuruTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("isilanlariId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("isilanlariId");

                    b.ToTable("IsBasvuruTbls");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<int?>("KUstMenuId")
                        .HasColumnType("int");

                    b.Property<string>("MenuName")
                        .HasColumnType("text");

                    b.Property<string>("MenuUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DilTablosuId");

                    b.HasIndex("KUstMenuId");

                    b.ToTable("KMenus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KaliteYonetimi", b =>
                {
                    b.Property<int>("KaliteYonetimi_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("KaliteYonetimi_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("KaliteYonetimi_icerik")
                        .HasColumnType("text");

                    b.Property<string>("KaliteYonetimi_isim")
                        .HasColumnType("text");

                    b.HasKey("KaliteYonetimi_Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("kaliteYonetimis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kariyer", b =>
                {
                    b.Property<int>("Kariyer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("Kariyer_Konu_baslik")
                        .HasColumnType("text");

                    b.Property<string>("Kariyer_resim_yol")
                        .HasColumnType("text");

                    b.Property<string>("kariyer_konu_icerik")
                        .HasColumnType("text");

                    b.HasKey("Kariyer_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("kariyers");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KullaniciKlavuzuIcerik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .HasColumnType("text");

                    b.Property<int>("KMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ResimYol")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DilTablosuId");

                    b.HasIndex("KMenuId")
                        .IsUnique();

                    b.ToTable("kullaniciKlavuzuIceriks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Logo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("text");

                    b.Property<string>("LogoYol")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("EntityLayer.Concrete.MailBulteni", b =>
                {
                    b.Property<int>("MailBultenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("KullaniciMail")
                        .HasColumnType("text");

                    b.HasKey("MailBultenId");

                    b.ToTable("MailBultenis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Musterilerimiz", b =>
                {
                    b.Property<int>("MusterilerimizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("MusterilerimizBaslik")
                        .HasColumnType("text");

                    b.Property<string>("MusterilerimizYol")
                        .HasColumnType("text");

                    b.Property<string>("Musterilerimizİcerik")
                        .HasColumnType("text");

                    b.HasKey("MusterilerimizId");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("Musterilerimizs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Referanslar", b =>
                {
                    b.Property<int>("Referanslar_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("Referanslar_icerik")
                        .HasColumnType("text");

                    b.Property<string>("Referanslar_isim")
                        .HasColumnType("text");

                    b.Property<string>("Referanslar_resim_yol")
                        .HasColumnType("text");

                    b.HasKey("Referanslar_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("referanslars");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SifremiUnuttum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("RandomKod")
                        .HasColumnType("text");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("sifremiUnuttums");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SifremiUnuttumMailTut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<int>("SifremiUnuttumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SifremiUnuttumId")
                        .IsUnique();

                    b.ToTable("sifremiUnuttumMailTuts");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SosyalMedyaLink", b =>
                {
                    b.Property<int>("SosyalMedyaLink_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("text");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("text");

                    b.Property<string>("TwitterLink")
                        .HasColumnType("text");

                    b.HasKey("SosyalMedyaLink_id");

                    b.ToTable("SosyalMedyaLinks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SosyalMedyaPaylasim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Facebook")
                        .HasColumnType("text");

                    b.Property<string>("Instagram")
                        .HasColumnType("text");

                    b.Property<string>("Twetter")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("sosyalMedyaPaylasims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SurumKilavuzIcerik", b =>
                {
                    b.Property<int>("SurumKilavuzIcerik_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("SurumKilavuzIcerik_Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("SurumKilavuzIcerik_No")
                        .HasColumnType("text");

                    b.Property<string>("SurumKilavuzIcerik_Tanim")
                        .HasColumnType("text");

                    b.Property<int>("SurumKilavuzuSurumKilavuz_Id")
                        .HasColumnType("int");

                    b.HasKey("SurumKilavuzIcerik_ID");

                    b.HasIndex("DilTablosuId");

                    b.HasIndex("SurumKilavuzuSurumKilavuz_Id");

                    b.ToTable("surumKilavuzIceriks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SurumKilavuzu", b =>
                {
                    b.Property<int>("SurumKilavuz_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("SurumKilavuz_Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("SurumKilavuz_Baslik")
                        .HasColumnType("text");

                    b.Property<DateTime>("SurumKilavuz_BelgeTarihi")
                        .HasColumnType("datetime");

                    b.HasKey("SurumKilavuz_Id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("surumKilavuzus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.UretimTakipYonetimi", b =>
                {
                    b.Property<int>("UretimTakip_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("UretimTakip_Resim_Yol")
                        .HasColumnType("text");

                    b.Property<string>("UretimTakip_icerik")
                        .HasColumnType("text");

                    b.Property<string>("UretimTakip_name")
                        .HasColumnType("text");

                    b.HasKey("UretimTakip_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("uretimTakipYonetimis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.VideoKategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("text");

                    b.Property<string>("KategoriResimYol")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("VideoKategoris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.WebMobil", b =>
                {
                    b.Property<int>("WebMobil_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("WebMobil_icerik")
                        .HasColumnType("text");

                    b.Property<string>("WebMobil_isim")
                        .HasColumnType("text");

                    b.Property<string>("WebMobil_resim_yol")
                        .HasColumnType("text");

                    b.HasKey("WebMobil_id");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("webMobils");
                });

            modelBuilder.Entity("EntityLayer.Concrete.iletisimMesaj", b =>
                {
                    b.Property<int>("mesaj_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Iletisim_Email")
                        .HasColumnType("text");

                    b.Property<string>("Iletisim_Konu")
                        .HasColumnType("text");

                    b.Property<string>("Iletisim_Mesaj")
                        .HasColumnType("text");

                    b.Property<string>("iletisim_Ad_Soyad")
                        .HasColumnType("text");

                    b.HasKey("mesaj_id");

                    b.ToTable("iletisimMesajs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.isArayanBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad_Soyad")
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("Cv_Yol")
                        .HasColumnType("text");

                    b.Property<string>("Mail")
                        .HasColumnType("text");

                    b.Property<string>("Telefon")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("isArayanBilgis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.isilanlari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("Baslik")
                        .HasColumnType("text");

                    b.Property<int>("DilTablosuId")
                        .HasColumnType("int");

                    b.Property<string>("IsYeriAdres")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DilTablosuId");

                    b.ToTable("isilanlaris");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AltBilgi", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim1", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim2", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim3", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnaSayfaKisim4", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnasayfaAltMenu", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AnasayfaMenu", "AnasayfaMenu")
                        .WithMany("anasayfaAltMenus")
                        .HasForeignKey("AnasayfaMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnasayfaMenu");

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnasayfaMenu", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Arge", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BakimYonetimi", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BarkodTakipStok", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Blog", b =>
                {
                    b.HasOne("EntityLayer.Concrete.BlogKategori", "BlogKategori")
                        .WithMany("blogs")
                        .HasForeignKey("BlogKategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogKategori");

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BlogKategori", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekIletisim", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DestekPortaliIletisimKategori", "DestekPortaliIletisimKategori")
                        .WithMany("destekIletisims")
                        .HasForeignKey("DestekPortaliIletisimKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestekPortaliIletisimKategori");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekPortali", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekPortaliIletisimKategori", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EgitimVideolari", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.VideoKategori", "Videokategori")
                        .WithMany("EgitimVideolaris")
                        .HasForeignKey("VideoKategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");

                    b.Navigation("Videokategori");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EndustriAkilliFabrika", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EnerjiYonetimi", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.EntegreSistem", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Haber", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Hakkimizda", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.IsBasvuruTbl", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.isilanlari", "isilanlari")
                        .WithMany("IsBasvuruTbls")
                        .HasForeignKey("isilanlariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("isilanlari");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KMenu", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.KMenu", "KUstMenu")
                        .WithMany("KAltMenus")
                        .HasForeignKey("KUstMenuId");

                    b.Navigation("DilTablosu");

                    b.Navigation("KUstMenu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KaliteYonetimi", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Kariyer", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KullaniciKlavuzuIcerik", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.KMenu", "Kmenu")
                        .WithOne("KullaniciKlavuzuIcerik")
                        .HasForeignKey("EntityLayer.Concrete.KullaniciKlavuzuIcerik", "KMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");

                    b.Navigation("Kmenu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Musterilerimiz", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Referanslar", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SifremiUnuttum", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", "AppUser")
                        .WithOne("SifremiUnuttum")
                        .HasForeignKey("EntityLayer.Concrete.SifremiUnuttum", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SifremiUnuttumMailTut", b =>
                {
                    b.HasOne("EntityLayer.Concrete.SifremiUnuttum", "SifremiUnuttum")
                        .WithOne("SifremiUnuttumMailTut")
                        .HasForeignKey("EntityLayer.Concrete.SifremiUnuttumMailTut", "SifremiUnuttumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SifremiUnuttum");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SurumKilavuzIcerik", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.SurumKilavuzu", "SurumKilavuzu")
                        .WithMany("surumKilavuzIceriks")
                        .HasForeignKey("SurumKilavuzuSurumKilavuz_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");

                    b.Navigation("SurumKilavuzu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SurumKilavuzu", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.UretimTakipYonetimi", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.VideoKategori", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.WebMobil", b =>
                {
                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("EntityLayer.Concrete.isArayanBilgi", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", "AppUser")
                        .WithOne("isArayanBilgi")
                        .HasForeignKey("EntityLayer.Concrete.isArayanBilgi", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("EntityLayer.Concrete.isilanlari", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.DilTablosu", "DilTablosu")
                        .WithMany()
                        .HasForeignKey("DilTablosuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("DilTablosu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityLayer.Concrete.AnasayfaMenu", b =>
                {
                    b.Navigation("anasayfaAltMenus");
                });

            modelBuilder.Entity("EntityLayer.Concrete.AppUser", b =>
                {
                    b.Navigation("isArayanBilgi");

                    b.Navigation("SifremiUnuttum");
                });

            modelBuilder.Entity("EntityLayer.Concrete.BlogKategori", b =>
                {
                    b.Navigation("blogs");
                });

            modelBuilder.Entity("EntityLayer.Concrete.DestekPortaliIletisimKategori", b =>
                {
                    b.Navigation("destekIletisims");
                });

            modelBuilder.Entity("EntityLayer.Concrete.KMenu", b =>
                {
                    b.Navigation("KAltMenus");

                    b.Navigation("KullaniciKlavuzuIcerik");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SifremiUnuttum", b =>
                {
                    b.Navigation("SifremiUnuttumMailTut");
                });

            modelBuilder.Entity("EntityLayer.Concrete.SurumKilavuzu", b =>
                {
                    b.Navigation("surumKilavuzIceriks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.VideoKategori", b =>
                {
                    b.Navigation("EgitimVideolaris");
                });

            modelBuilder.Entity("EntityLayer.Concrete.isilanlari", b =>
                {
                    b.Navigation("IsBasvuruTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
